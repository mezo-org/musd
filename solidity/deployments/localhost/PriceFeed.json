{
  "address": "0x97bdb29Ea43031E0A39CEFeb82F9d51f27035524",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastGoodPrice",
          "type": "uint256"
        }
      ],
      "name": "LastGoodPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "NewOracleRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TARGET_DIGITS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fetchPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract ChainlinkAggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x13b1cf76f01fff0a73ce24e143a7b9dbad611d14de253826ba8116cef0e968be",
  "receipt": {
    "to": null,
    "from": "0x31c57298578f7508B5982062cfEc5ec8BD346247",
    "contractAddress": "0x97bdb29Ea43031E0A39CEFeb82F9d51f27035524",
    "transactionIndex": 0,
    "gasUsed": "420380",
    "logsBloom": "0x
    "blockHash": "0x015469800c412d7da9e3fbb7db7df98a0bf52c3fd96edcc0a641d6e397830fc4",
    "transactionHash": "0x13b1cf76f01fff0a73ce24e143a7b9dbad611d14de253826ba8116cef0e968be",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3333561,
        "transactionHash": "0x13b1cf76f01fff0a73ce24e143a7b9dbad611d14de253826ba8116cef0e968be",
        "address": "0x97bdb29Ea43031E0A39CEFeb82F9d51f27035524",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000031c57298578f7508b5982062cfec5ec8bd346247"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x015469800c412d7da9e3fbb7db7df98a0bf52c3fd96edcc0a641d6e397830fc4"
      }
    ],
    "blockNumber": 3333561,
    "cumulativeGasUsed": "420380",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a5a5924c8769aaafa5a742bdee21ed0e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastGoodPrice\",\"type\":\"uint256\"}],\"name\":\"LastGoodPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"NewOracleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TARGET_DIGITS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract ChainlinkAggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"TARGET_DIGITS\":{\"details\":\"Used to convert an oracle price answer to an 18-digit precision uint\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceFeed.sol\":\"PriceFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/PriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./interfaces/ChainlinkAggregatorV3Interface.sol\\\";\\nimport \\\"./interfaces/IPriceFeed.sol\\\";\\n\\ncontract PriceFeed is IPriceFeed, Ownable {\\n    /// @dev Used to convert an oracle price answer to an 18-digit precision uint\\n    uint8 public constant TARGET_DIGITS = 18;\\n\\n    // State ------------------------------------------------------------------------------------------------------------\\n    ChainlinkAggregatorV3Interface public oracle;\\n\\n    constructor() Ownable(msg.sender) {}\\n\\n    // Admin routines ---------------------------------------------------------------------------------------------------\\n\\n    function setOracle(address _oracle) external onlyOwner {\\n        ChainlinkAggregatorV3Interface chainLinkOracle = ChainlinkAggregatorV3Interface(\\n                _oracle\\n            );\\n\\n        require(chainLinkOracle.decimals() > 0, \\\"Invalid Decimals from Oracle\\\");\\n        // slither-disable-next-line unused-return\\n        (, int256 price, , , ) = chainLinkOracle.latestRoundData();\\n        require(price != 0, \\\"Oracle returns 0 for price\\\");\\n\\n        oracle = chainLinkOracle;\\n        emit NewOracleRegistered(_oracle);\\n    }\\n\\n    // Public functions -------------------------------------------------------------------------------------------------\\n\\n    function fetchPrice() public view virtual returns (uint256) {\\n        // slither-disable-next-line unused-return\\n        (, int256 price, , , ) = oracle.latestRoundData();\\n        return _scalePriceByDigits(uint256(price), oracle.decimals());\\n    }\\n\\n    /**\\n     * @dev Scales oracle's response up/down to 1e18 precisoin.\\n     */\\n    function _scalePriceByDigits(\\n        uint256 _price,\\n        uint8 _priceDigits\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            if (_priceDigits > TARGET_DIGITS) {\\n                return _price / (10 ** (_priceDigits - TARGET_DIGITS));\\n            } else if (_priceDigits < TARGET_DIGITS) {\\n                return _price * (10 ** (TARGET_DIGITS - _priceDigits));\\n            }\\n        }\\n        return _price;\\n    }\\n}\\n\",\"keccak256\":\"0xed735f08b9d5dcbe2289d5198d9eb251ab5bfd031e49b552eb47f9839116961e\",\"license\":\"MIT\"},\"contracts/interfaces/ChainlinkAggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.24;\\n\\ninterface ChainlinkAggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x1886b3548c820eb6784d8536c777e8d8042b888dde667b1d2427b12bba56e947\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.24;\\n\\ninterface IPriceFeed {\\n    // --- Events ---\\n    event LastGoodPriceUpdated(uint256 _lastGoodPrice);\\n\\n    event NewOracleRegistered(address _oracle);\\n\\n    // --- Function ---\\n    function fetchPrice() external returns (uint);\\n\\n    function setOracle(address _oracle) external;\\n}\\n\",\"keccak256\":\"0x2c0d4f671d023fd09105eaccdc68d34db8ec0aac71fdb15a23a279d1d56d9f28\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61062d806100a56000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80630fdb11cf146100725780631be5c92f1461008d578063715018a6146100a75780637adbf973146100b15780637dc0d1d0146100c45780638da5cb5b146100e4578063f2fde38b146100f5575b600080fd5b61007a610108565b6040519081526020015b60405180910390f35b610095601281565b60405160ff9091168152602001610084565b6100af61020e565b005b6100af6100bf36600461050b565b610222565b6001546100d7906001600160a01b031681565b604051610084919061053b565b6000546001600160a01b03166100d7565b6100af61010336600461050b565b6103fa565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610182919061056e565b50505091505061020881600160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020391906105be565b610438565b91505090565b61021661048e565b61022060006104bb565b565b61022a61048e565b60008190506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029391906105be565b60ff16116102e85760405162461bcd60e51b815260206004820152601c60248201527f496e76616c696420446563696d616c732066726f6d204f7261636c650000000060448201526064015b60405180910390fd5b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c919061056e565b505050915050806000036103a25760405162461bcd60e51b815260206004820152601a60248201527f4f7261636c652072657475726e73203020666f7220707269636500000000000060448201526064016102df565b600180546001600160a01b0319166001600160a01b0384161790556040517f8de161a8d9b9bbbb4aa311abe721f567c2a31bb35f18894710680ef3923fb640906103ed90859061053b565b60405180910390a1505050565b61040261048e565b6001600160a01b03811661042c576000604051631e4fbdf760e01b81526004016102df919061053b565b610435816104bb565b50565b6000601260ff83161115610466576012820360ff16600a0a838161045e5761045e6105e1565b049050610488565b601260ff83161015610485578160120360ff16600a0a83029050610488565b50815b92915050565b6000546001600160a01b03163314610220573360405163118cdaa760e01b81526004016102df919061053b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561051d57600080fd5b81356001600160a01b038116811461053457600080fd5b9392505050565b6001600160a01b0391909116815260200190565b805169ffffffffffffffffffff8116811461056957600080fd5b919050565b600080600080600060a0868803121561058657600080fd5b61058f8661054f565b94506020860151935060408601519250606086015191506105b26080870161054f565b90509295509295909350565b6000602082840312156105d057600080fd5b815160ff8116811461053457600080fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220ad06a3b3631fc341f3c0aa6edaa18c081d9f0d4963d7cf1bc5b24c6129893a2464736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061006d5760003560e01c80630fdb11cf146100725780631be5c92f1461008d578063715018a6146100a75780637adbf973146100b15780637dc0d1d0146100c45780638da5cb5b146100e4578063f2fde38b146100f5575b600080fd5b61007a610108565b6040519081526020015b60405180910390f35b610095601281565b60405160ff9091168152602001610084565b6100af61020e565b005b6100af6100bf36600461050b565b610222565b6001546100d7906001600160a01b031681565b604051610084919061053b565b6000546001600160a01b03166100d7565b6100af61010336600461050b565b6103fa565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610182919061056e565b50505091505061020881600160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020391906105be565b610438565b91505090565b61021661048e565b61022060006104bb565b565b61022a61048e565b60008190506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029391906105be565b60ff16116102e85760405162461bcd60e51b815260206004820152601c60248201527f496e76616c696420446563696d616c732066726f6d204f7261636c650000000060448201526064015b60405180910390fd5b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c919061056e565b505050915050806000036103a25760405162461bcd60e51b815260206004820152601a60248201527f4f7261636c652072657475726e73203020666f7220707269636500000000000060448201526064016102df565b600180546001600160a01b0319166001600160a01b0384161790556040517f8de161a8d9b9bbbb4aa311abe721f567c2a31bb35f18894710680ef3923fb640906103ed90859061053b565b60405180910390a1505050565b61040261048e565b6001600160a01b03811661042c576000604051631e4fbdf760e01b81526004016102df919061053b565b610435816104bb565b50565b6000601260ff83161115610466576012820360ff16600a0a838161045e5761045e6105e1565b049050610488565b601260ff83161015610485578160120360ff16600a0a83029050610488565b50815b92915050565b6000546001600160a01b03163314610220573360405163118cdaa760e01b81526004016102df919061053b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561051d57600080fd5b81356001600160a01b038116811461053457600080fd5b9392505050565b6001600160a01b0391909116815260200190565b805169ffffffffffffffffffff8116811461056957600080fd5b919050565b600080600080600060a0868803121561058657600080fd5b61058f8661054f565b94506020860151935060408601519250606086015191506105b26080870161054f565b90509295509295909350565b6000602082840312156105d057600080fd5b815160ff8116811461053457600080fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220ad06a3b3631fc341f3c0aa6edaa18c081d9f0d4963d7cf1bc5b24c6129893a2464736f6c63430008180033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "TARGET_DIGITS": {
        "details": "Used to convert an oracle price answer to an 18-digit precision uint"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/PriceFeed.sol:PriceFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 8972,
        "contract": "contracts/PriceFeed.sol:PriceFeed",
        "label": "oracle",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(ChainlinkAggregatorV3Interface)26808"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(ChainlinkAggregatorV3Interface)26808": {
        "encoding": "inplace",
        "label": "contract ChainlinkAggregatorV3Interface",
        "numberOfBytes": "20"
      }
    }
  }
}